package com.timepath.hl2.io.image

import com.timepath.EnumFlags

/**
 * @see <a>https://github.com/ValveSoftware/source-sdk-2013/blob/master/mp/src/public/vtf/vtf.h</a>
 * @see <a>https://developer.valvesoftware.com/wiki/Valve_Texture_Format#Image_flags</a>
 */
public enum class VTFFlags(override val id: Int, private val title: String = "Unused") : EnumFlags.Flag<VTFFlags> {
    // Flags from the *.txt config file
    POINTSAMPLE(1, "Point Sample"),
    TRILINEAR(2, "Trilinear"),
    CLAMPS(4, "Clamp S"),
    CLAMPT(8, "Clamp T"),
    ANISOTROPIC(16, "Anisotropic"),
    HINT_DXT5(32, "Hint DXT5"),
    PWL_CORRECTED(64, "SRGB"),
    NORMAL(128, "Normal Map"),
    NOMIP(256, "No Mipmap"),
    NOLOD(512, "No Level Of Detail"),
    ALL_MIPS(1024, "No Minimum Mipmap"),
    PROCEDURAL(2048, "Procedural"),
    /**
     * Automatically generated by vtex from the texture data.
     */
    ONEBITALPHA(4096, "One Bit Alpha (Format Specified)"),
    /**
     * Automatically generated by vtex from the texture data.
     */
    EIGHTBITALPHA(8192, "Eight Bit Alpha (Format Specified)"),
    ENVMAP(16384, "Environment Map (Format Specified)"),
    RENDERTARGET(32768, "Render Target"),
    DEPTHRENDERTARGET(65536, "Depth Render Target"),
    NODEBUGOVERRIDE(131072, "No Debug Override"),
    SINGLECOPY(262144, "Single Copy"),
    PRE_SRGB(524288),
    UNUSED_00100000(1048576),
    UNUSED_00200000(2097152),
    UNUSED_00400000(4194304),
    NODEPTHBUFFER(8388608, "No Depth Buffer"),
    UNUSED_01000000(16777216),
    CLAMPU(33554432, "Clamp U"),
    /**
     * Usable as a vertex texture
     */
    VERTEXTEXTURE(67108864, "Vertex Texture"),
    SSBUMP(134217728, "SSBump"),
    UNUSED_10000000(268435456),
    /**
     * Clamp to border color on all texture coordinates
     */
    BORDER(536870912, "Clamp All"),
    UNUSED_40000000(1073741824),
    UNUSED_80000000(-2147483648);

    public fun getEnumForMask(mask: Int): VTFFlags? {
        val values = VTFFlags.values()
        for (eachValue in values) {
            if (eachValue.id == mask) {
                return eachValue
            }
        }
        return null
    }

    override fun toString() = title
}
