package com.timepath.hl2.io.image

import com.timepath.EnumFlag

/**
 * @see <a>https://github.com/ValveSoftware/source-sdk-2013/blob/master/mp/src/public/vtf/vtf.h</a>
 * @see <a>https://developer.valvesoftware.com/wiki/Valve_Texture_Format#Image_flags</a>
 */
public enum class VTFFlags(val mask: Int, private val title: String = "Unused") : EnumFlag {
    // Flags from the *.txt config file
    POINTSAMPLE : VTFFlags(1, "Point Sample")
    TRILINEAR : VTFFlags(2, "Trilinear")
    CLAMPS : VTFFlags(4, "Clamp S")
    CLAMPT : VTFFlags(8, "Clamp T")
    ANISOTROPIC : VTFFlags(16, "Anisotropic")
    HINT_DXT5 : VTFFlags(32, "Hint DXT5")
    PWL_CORRECTED : VTFFlags(64, "SRGB")
    NORMAL : VTFFlags(128, "Normal Map")
    NOMIP : VTFFlags(256, "No Mipmap")
    NOLOD : VTFFlags(512, "No Level Of Detail")
    ALL_MIPS : VTFFlags(1024, "No Minimum Mipmap")
    PROCEDURAL : VTFFlags(2048, "Procedural")
    /**
     * Automatically generated by vtex from the texture data.
     */
    ONEBITALPHA : VTFFlags(4096, "One Bit Alpha (Format Specified)")
    /**
     * Automatically generated by vtex from the texture data.
     */
    EIGHTBITALPHA : VTFFlags(8192, "Eight Bit Alpha (Format Specified)")
    ENVMAP : VTFFlags(16384, "Environment Map (Format Specified)")
    RENDERTARGET : VTFFlags(32768, "Render Target")
    DEPTHRENDERTARGET : VTFFlags(65536, "Depth Render Target")
    NODEBUGOVERRIDE : VTFFlags(131072, "No Debug Override")
    SINGLECOPY : VTFFlags(262144, "Single Copy")
    PRE_SRGB : VTFFlags(524288)
    UNUSED_00100000 : VTFFlags(1048576)
    UNUSED_00200000 : VTFFlags(2097152)
    UNUSED_00400000 : VTFFlags(4194304)
    NODEPTHBUFFER : VTFFlags(8388608, "No Depth Buffer")
    UNUSED_01000000 : VTFFlags(16777216)
    CLAMPU : VTFFlags(33554432, "Clamp U")
    /**
     * Usable as a vertex texture
     */
    VERTEXTEXTURE : VTFFlags(67108864, "Vertex Texture")
    SSBUMP : VTFFlags(134217728, "SSBump")
    UNUSED_10000000 : VTFFlags(268435456)
    /**
     * Clamp to border color on all texture coordinates
     */
    BORDER : VTFFlags(536870912, "Clamp All")
    UNUSED_40000000 : VTFFlags(1073741824)
    UNUSED_80000000 : VTFFlags(-2147483648)

    public fun getEnumForMask(mask: Int): VTFFlags? {
        val values = VTFFlags.values()
        for (eachValue in values) {
            if (eachValue.mask == mask) {
                return eachValue
            }
        }
        return null
    }

    override fun getId(): Int {
        return mask
    }

    override fun toString(): String {
        return title
    }
}
