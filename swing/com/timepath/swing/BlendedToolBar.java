package com.timepath.swing;

import com.timepath.plaf.OS;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JMenuBar;
import javax.swing.JToolBar;

/**
 *
 * @author timepath
 */
@SuppressWarnings("serial")
public class BlendedToolBar extends JToolBar implements MouseListener, MouseMotionListener {

    /**
     * Creates new form BlendedToolBar
     */
    public BlendedToolBar() {
        initComponents();
        mb = new JMenuBar();
        this.add(mb);
        mb.setVisible(false);
    }

    @Override
    public Component add(Component comp) {
//        comp.setForeground(new Color(mb.getForeground().getRGB()));
//        comp.setBackground(new Color(mb.getBackground().getRGB()));
        return super.add(comp);
    }

    public void setWindow(JFrame window) {
        this.window = window;
        if(window != null && !OS.isWindows()) {
            this.addMouseListener(this);
            this.addMouseMotionListener(this);
        }
    }

    private final JMenuBar mb;

    private JFrame window;

//    @Override
//    protected void paintComponent(Graphics g) {
////        if(Main.os == OS.Mac) { // Has its own metal look
////            super.paintComponent(g);
////            return;
////        }
//        this.setForeground(mb.getForeground());
//        this.setBackground(mb.getBackground());
//
//        g.setColor(this.getBackground());
//        g.fillRect(0, 0, this.getWidth(), this.getHeight());
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setFloatable(false);
        setMinimumSize(new java.awt.Dimension(24, 24));
        setPreferredSize(new java.awt.Dimension(24, 24));
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    private static final Logger LOG = Logger.getLogger(BlendedToolBar.class.getName());

    private Point wloc, mloc;

    public void mouseDragged(MouseEvent me) {
        Point p = me.getLocationOnScreen();
        window.setLocation(wloc.x + (p.x - mloc.x), wloc.y + (p.y - mloc.y));
        this.setCursor(new Cursor(Cursor.MOVE_CURSOR));
    }

    public void mousePressed(MouseEvent me) {
        this.setCursor(new Cursor(Cursor.MOVE_CURSOR));
        wloc = window.getLocation();
        mloc = me.getLocationOnScreen();
    }

    public void mouseReleased(MouseEvent me) {
        this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }

    public void mouseMoved(MouseEvent me) {
    }

    public void mouseClicked(MouseEvent me) {
    }

    public void mouseEntered(MouseEvent me) {
    }

    public void mouseExited(MouseEvent me) {
    }
}